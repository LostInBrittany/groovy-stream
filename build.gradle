apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'signing'

group               = 'com.bloidonia'
version             = '0.6-SNAPSHOT'
sourceCompatibility = 1.6
targetCompatibility = 1.6

compileGroovy.options.compilerArgs << "-Xlint:unchecked"

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'maven central' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
}


// In this section you declare the dependencies for your production and test code
dependencies {
    compile     'org.codehaus.groovy:groovy-all:2.1.6'
    testCompile 'org.spockframework:spock-core:0.7-groovy-2.0'
    testRuntime fileTree( dir:'build/libs/', includes:[ "groovy-stream-${version}.jar".toString() ] )
}

def metaServices = new File( 'src/main/groovy/META-INF/services' )

task generateModule << {
    metaServices.mkdirs()
    new File( metaServices, 'org.codehaus.groovy.runtime.ExtensionModule' ).withWriter { w ->
        w.writeLine 'moduleName=groovy-stream'
        w.writeLine "moduleVersion=$version"
        w.writeLine 'extensionClasses=groovy.stream.StreamExtension'
        w.writeLine 'staticExtensionClasses='
    }
}

compileGroovy.dependsOn( generateModule )
test.dependsOn( jar )
uploadArchives.dependsOn( test )

jar {
    from( metaServices ) {
        include 'org.codehaus.groovy.runtime.ExtensionModule' into( 'META-INF/services' )
    }
}

task groovydocJar( type: Jar, dependsOn: groovydoc ) {
    classifier 'javadoc'
    from groovydoc.destinationDir
}

task sourcesJar( type: Jar ) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

artifacts {
    archives jar
    archives sourcesJar
    archives groovydocJar
}

signing {
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
 
            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }
 
            pom.project {
                name 'Groovy Stream'
                description 'A collection of classes to give a fluent builder for Streams (Lazy Groovy Generators).'
                url 'http://timyates.github.com/groovy-stream/'
                inceptionYear '2012'

                scm {
                    url 'https://github.com/timyates/groovy-stream'
                    connection 'scm:https://github.com/timyates/groovy-stream.git'
                    developerConnection 'scm:git://github.com/timyates/groovy-stream.git'
                }

                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                }

                developers {
                    developer {
                        id 'tim_yates'
                        name 'Tim Yates'
                        email 'tim.yates@gmail.com'
                    }
                }
            }
        }
    }
}

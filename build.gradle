apply plugin: 'groovy'
apply plugin: 'maven'

repositories {
  mavenCentral()
}

dependencies {
  groovy      'org.codehaus.groovy:groovy-all:1.8.6'
  testCompile 'org.spockframework:spock-core:0.6-groovy-1.8'
}

compileGroovy.options.compilerArgs << "-Xlint:unchecked" << "-Werror"
group = 'com.bloidonia'
version = '0.5.1'

groovydoc {
  docTitle = "Groovy Stream: A Lazy Generator"
  header = docTitle
  footer = ''
  windowTitle = docTitle
  use = true
  link( 'http://download.oracle.com/javase/6/docs/api/', 'java.' )
  link('http://groovy.codehaus.org/api/',  'groovy.', 'org.codehaus.groovy.')
}

def metaServices = new File( 'src/main/groovy/META-INF/services' )

task generateModule << {
  metaServices.mkdirs()
  new File( metaServices, 'org.codehaus.groovy.runtime.ExtensionModule' ).withWriter { w ->
    w.writeLine 'moduleName=groovy-stream'
    w.writeLine "moduleVersion=$version"
    w.writeLine 'extensionClasses=groovy.stream.StreamExtension'
    w.writeLine 'staticExtensionClasses='
  }
}

compileGroovy.dependsOn( generateModule )

jar {
  from( metaServices ) {
    include 'org.codehaus.groovy.runtime.ExtensionModule' into( 'META-INF/services' )
  }
}

uploadArchives {
  if( project.hasProperty( 'localrepo' ) ) {
    repositories {
      mavenDeployer {
        repository( url: "file:${localrepo}" )
      }
    }
  }
  else {
    println "Need to set 'localrepo' in gradle.properties if you wish to run the uploadArchives task"
  }
}

task wrapper(type: Wrapper) {
  gradleVersion = '1.0'
}
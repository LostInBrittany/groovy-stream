buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:0.3'
    }
}

apply plugin: 'groovy'
apply plugin: 'bintray'
apply plugin: 'maven-publish'

group               = 'com.bloidonia'
version             = '0.7.0'
sourceCompatibility = 1.6
targetCompatibility = 1.6

compileJava.options.compilerArgs << "-Xlint:unchecked"

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'maven central' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    compile     'org.codehaus.groovy:groovy-all:2.2.0'
    testCompile 'org.spockframework:spock-core:0.7-groovy-2.0'
    testCompile "junit:junit:4.11"
    testCompile( "org.apache.ant:ant-junit:1.9.2" ) {
        exclude(group: 'junit', module: 'junit')
    }
    testRuntime fileTree( dir:'build/libs/', includes:[ "groovy-stream-${version}.jar".toString() ] )
}

def metaServices = new File( 'src/main/groovy/META-INF/services' )

task generateModule << {
    metaServices.mkdirs()
    new File( metaServices, 'org.codehaus.groovy.runtime.ExtensionModule' ).withWriter { w ->
        w.writeLine 'moduleName=groovy-stream'
        w.writeLine "moduleVersion=$version"
        w.writeLine 'extensionClasses=groovy.stream.StreamExtension'
        w.writeLine 'staticExtensionClasses='
    }
}

task jbake( type:Exec ) {
    commandLine 'jbake', 'docs', 'docs/output'
}
jbake.dependsOn( test )

compileGroovy.dependsOn( generateModule )
test.dependsOn( jar )
uploadArchives.dependsOn( test )

jar {
    from( metaServices ) {
        include 'org.codehaus.groovy.runtime.ExtensionModule' into( 'META-INF/services' )
    }
}

javadoc {
    options.links = [ 'http://groovy.codehaus.org/api/', 'http://docs.oracle.com/javase/6/docs/api/' ]
}

task javadocJar( type: Jar, dependsOn: javadoc ) {
    classifier 'javadoc'
    from javadoc.destinationDir
}

task sourcesJar( type: Jar ) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

artifacts {
    archives jar
    archives sourcesJar
    archives javadocJar
}

if( !hasProperty( 'sonatypeUsername' ) ) {
    ext.sonatypeUsername = ''
}

if( !hasProperty( 'sonatypePassword' ) ) {
    ext.sonatypePassword = ''
}

if( !hasProperty( 'bintrayUsername' ) ) {
    ext.bintrayUsername = ''
}

if( !hasProperty( 'bintrayKey' ) ) {
    ext.bintrayKey = ''
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourcesJar {
                classifier "sources"
            }

            artifact javadocJar {
                classifier "javadoc"
            }
        }
    }
}

bintray {
    user = bintrayUsername
    key = bintrayKey
    publications = ['mavenJava'] // When uploading Maven-based publication files
    pkg {
        repo = 'groovy-stream'
        name = 'groovy-stream'
        desc = 'A collection of classes to give a fluent builder for Streams (Lazy Groovy Generators).'
        licenses = ['Apache-2.0']
        labels = ['groovy','lazy','iterators','stream']
    }
    dryRun = false
}
